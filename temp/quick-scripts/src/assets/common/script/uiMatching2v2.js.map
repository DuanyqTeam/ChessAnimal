{"version":3,"sources":["../../../../../assets/common/script/assets/common/script/uiMatching2v2.js"],"names":["uiPanel","require","mvs","GLB","cc","Class","properties","playerIcons","Node","onLoad","_super","nodeDict","on","leaveRoom","response","joinRoomResponse","bind","joinRoomNotify","leaveRoomResponse","leaveRoomNotify","joinRandomRoom","result","matchType","RANDOM_MATCH","engine","MAX_PLAYER_COUNT","console","log","PROPERTY_MATCH","matchinfo","MatchInfo","maxPlayer","mode","canWatch","tags","tagsInfo","joinRoomWithProperties","startGame","director","loadScene","data","status","roomInfo","roomID","roomId","userIds","userInfo","id","playerIcon","j","roomUserInfoList","length","getComponent","setData","userId","push","i","playerUserIds","joinOver","JSON","stringify","roomUserInfo","leaveRoomInfo","playerId","init","leaveRoomRsp","uiFunc","closeUI","node","name","destroy","joinOverResponse","joinOverRsp","notifyGameStart","isRoomOwner","event","action","GAME_START_EVENT","sendEvent","onDestroy","clientEvent","eventType"],"mappings":"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","sourceRoot":"../../../../../assets/common/script","sourcesContent":["var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\nvar GLB = require(\"Glb\");\ncc.Class({\n    extends: uiPanel,\n    properties: {\n        playerIcons: [cc.Node]\n    },\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"quit\"].on(\"click\", this.leaveRoom, this);\n\n        mvs.response.joinRoomResponse = this.joinRoomResponse.bind(this);\n        mvs.response.joinRoomNotify = this.joinRoomNotify.bind(this);\n        mvs.response.leaveRoomResponse = this.leaveRoomResponse.bind(this);\n        mvs.response.leaveRoomNotify = this.leaveRoomNotify.bind(this);\n    },\n\n    joinRandomRoom: function() {\n        var result = null;\n        if (GLB.matchType === GLB.RANDOM_MATCH) {\n            result = mvs.engine.joinRandomRoom(GLB.MAX_PLAYER_COUNT, '');\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        } else if (GLB.matchType === GLB.PROPERTY_MATCH) {\n            var matchinfo = new mvs.MatchInfo();\n            matchinfo.maxPlayer = GLB.MAX_PLAYER_COUNT;\n            matchinfo.mode = 0;\n            matchinfo.canWatch = 0;\n            matchinfo.tags = GLB.tagsInfo;\n            result = mvs.engine.joinRoomWithProperties(matchinfo, \"joinRoomWithProperties\");\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        }\n    },\n\n    startGame: function() {\n        console.log('游戏即将开始');\n        cc.director.loadScene('game');\n    },\n\n    joinRoomResponse: function(data) {\n        if (data.status !== 200) {\n            console.log('进入房间失败,异步回调错误码: ' + data.status);\n        } else {\n            console.log('进入房间成功');\n            console.log('房间号: ' + data.roomInfo.roomID);\n        }\n        GLB.roomId = data.roomInfo.roomID;\n        var userIds = [GLB.userInfo.id]\n        console.log('房间用户: ' + userIds);\n\n        var playerIcon = null;\n        for (var j = 0; j < data.roomUserInfoList.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfoList[j]);\n                if (GLB.userInfo.id !== data.roomUserInfoList[j].userId) {\n                    userIds.push(data.roomUserInfoList[j].userId);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.playerIcons.length; i++) {\n            playerIcon = this.playerIcons[i].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(GLB.userInfo);\n                break;\n            }\n        }\n        GLB.playerUserIds = userIds;\n        if (userIds.length >= GLB.MAX_PLAYER_COUNT) {\n            var result = mvs.engine.joinOver(\"\");\n            console.log(\"发出关闭房间的通知\");\n            if (result !== 0) {\n                console.log(\"关闭房间失败，错误码：\", result);\n            }\n\n            GLB.playerUserIds = userIds;\n        }\n    },\n\n    joinRoomNotify: function(data) {\n        console.log(\"joinRoomNotify, roomUserInfo:\" + JSON.stringify(data.roomUserInfo));\n        var playerIcon = null;\n        for (var j = 0; j < this.playerIcons.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfo);\n                break;\n            }\n        }\n    },\n\n    leaveRoom: function() {\n        mvs.engine.leaveRoom(\"\");\n    },\n\n    leaveRoomNotify: function(data) {\n        if (GLB.roomId === data.leaveRoomInfo.roomID) {\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon && playerIcon.userInfo && playerIcon.playerId === data.leaveRoomInfo.userId) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n        }\n    },\n\n    leaveRoomResponse: function(data) {\n        if (data.leaveRoomRsp.status === 200) {\n            console.log(\"离开房间成功\");\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        } else {\n            console.log(\"离开房间失败\");\n        }\n    },\n\n\n    joinOverResponse: function(data) {\n        if (data.joinOverRsp.status === 200) {\n            console.log(\"关闭房间成功\");\n            this.notifyGameStart();\n        } else {\n            console.log(\"关闭房间失败，回调通知错误码：\", data.joinOverRsp.status);\n        }\n    },\n\n    notifyGameStart: function() {\n        GLB.isRoomOwner = true;\n        var event = {\n            action: GLB.GAME_START_EVENT,\n            userIds: GLB.playerUserIds\n        };\n        mvs.engine.sendEvent(JSON.stringify(event));\n    },\n\n    onDestroy() {\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    }\n});\n"]}