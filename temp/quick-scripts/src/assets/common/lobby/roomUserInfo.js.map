{"version":3,"sources":["../../../../../assets/common/lobby/assets/common/lobby/roomUserInfo.js"],"names":["mvs","require","GLB","cc","Class","Component","properties","userName","type","Label","ownerTag","Node","otherTag","selfTag","defaultNode","commonNode","kick","userIcon","Sprite","init","active","string","on","kickPlayer","userId","clientEvent","eventType","playerAccountGet","userInfoSet","setData","ownerId","userInfo","id","isRoomOwner","Game","GameManager","userInfoReq","recvMsg","console","log","account","headIcon","loader","load","url","err","texture","spriteFrame","SpriteFrame","Rect","width","height","bind","onDestroy","off","engine"],"mappings":"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","sourceRoot":"../../../../../assets/common/lobby","sourcesContent":["var mvs = require(\"Matchvs\");\nvar GLB = require(\"Glb\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        userName: {\n            default: null,\n            type: cc.Label\n        },\n        ownerTag: {\n            default: null,\n            type: cc.Node\n        },\n        otherTag: {\n            default: null,\n            type: cc.Node\n        },\n        selfTag: {\n            default: null,\n            type: cc.Node\n        },\n        defaultNode: {\n            default: null,\n            type: cc.Node\n        },\n        commonNode: {\n            default: null,\n            type: cc.Node\n        },\n        kick: {\n            default: null,\n            type: cc.Node\n        },\n        userIcon: cc.Sprite\n    },\n\n    init: function() {\n        this.defaultNode.active = true;\n        this.otherTag.active = false;\n        this.ownerTag.active = false;\n        this.selfTag.active = false;\n        this.userName.string = '';\n        this.commonNode.active = false;\n        this.kick.active = false;\n        this.kick.on(\"click\", this.kickPlayer, this);\n        this.userId = 0;\n        clientEvent.on(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    setData: function(userId, ownerId) {\n        this.userId = userId;\n        if (this.userId === ownerId) {\n            this.ownerTag.active = true;\n            this.otherTag.active = false;\n            this.selfTag.active = false;\n        } else if (this.userId === GLB.userInfo.id) {\n            this.ownerTag.active = false;\n            this.otherTag.active = false;\n            this.selfTag.active = true;\n        } else {\n            this.ownerTag.active = false;\n            this.otherTag.active = true;\n            this.selfTag.active = false;\n        }\n        this.defaultNode.active = false;\n        this.commonNode.active = true;\n        this.userName.string = this.userId;\n\n        if (!GLB.isRoomOwner || this.userId === GLB.userInfo.id) {\n            this.kick.active = false;\n        } else {\n            this.kick.active = true;\n        }\n        Game.GameManager.userInfoReq(this.userId);\n    },\n\n    userInfoSet: function(recvMsg) {\n        console.log(\"recvMsg:\" + recvMsg);\n        if (recvMsg.account == this.userId) {\n            console.log(\"set user info\");\n            console.log(recvMsg);\n            this.userName.string = recvMsg.userName;\n            if (recvMsg.headIcon && recvMsg.headIcon !== \"-\") {\n                cc.loader.load({url: recvMsg.headIcon, type: 'png'}, function(err, texture) {\n                    var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                    this.userIcon.spriteFrame = spriteFrame;\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    kickPlayer: function() {\n        mvs.engine.kickPlayer(this.userId, \"kick\");\n    }\n});\n"]}