{"version":3,"sources":["../../../../../../assets/common/script/basic/assets/common/script/basic/DataFunc.js"],"names":["window","dataFunc","arrTables","csvTables","csvTableForArr","tableCast","tableComment","CELL_DELIMITERS","LINE_DELIMITERS","uiPanelAnimationClips","randomNum","Min","Max","Range","Rand","Math","random","num","round","getTable","tableName","getTableArr","queryOne","key","value","table","tbItem","hasOwnProperty","queryByID","ID","queryAll","ret","loadConfigs","progressCb","callback","cc","loader","loadResDir","AnimationClip","err","clips","error","message","i","length","name","currentLoad","forEach","index","loadRes","content","addTable","tableContent","force","tableData","tableArr","opts","header","CSV","parse","row","keyname","push","cast","comment","getterCast","d","Array","Number","isNaN","STANDARD_DECODE_OPTS","skip","limit","STANDARD_ENCODE_OPTS","delimiter","newline","quoteMark","doubleQuoteMark","quoteRegex","assign","args","prototype","slice","call","arguments","base","rest","len","attr","map","collection","fn","results","getType","obj","Object","toString","getLimit","buildObjectConstructor","fields","sample","object","setter","idx","buildArrayConstructor","frequency","coll","needle","count","lastIndex","maxIndex","indexOf","mostFrequent","needles","max","detected","cur","unsafeParse","text","lines","split","splice","constructor","cells","line","shift","findIndex","list","item","quoteCount","start","end","parseInt","substring","rows","bind","min","floor"],"mappings":"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","sourceRoot":"../../../../../../assets/common/script/basic","sourcesContent":["/*\n    create by hao.c 2018/04/10\n\n    desc: 游戏数据相关操作逻辑\n */\n\nwindow.dataFunc = {\n    // 表格加载--\n    arrTables: [],\n    csvTables: {},\n    csvTableForArr: {},\n    tableCast: {},\n    tableComment: {},\n    CELL_DELIMITERS: [\",\", \";\", \"\\t\", \"|\", \"^\"],\n    LINE_DELIMITERS: [\"\\r\\n\", \"\\r\", \"\\n\"],\n    // 动画--\n    uiPanelAnimationClips: {}\n};\n\n// [Min,Max],可以取到最大值与最小值\ndataFunc.randomNum = function(Min, Max) {\n    var Range = Max - Min;\n    var Rand = Math.random();\n    var num = Min + Math.round(Rand * Range);\n    return num;\n};\n\ndataFunc.getTable = function(tableName) {\n    return dataFunc.csvTables[tableName];\n};\n\ndataFunc.getTableArr = function(tableName) {\n    return dataFunc.csvTableForArr[tableName];\n};\n\ndataFunc.queryOne = function(tableName, key, value) {\n    var table = dataFunc.getTable(tableName);\n    if (!table) {\n        return null;\n    }\n\n    if (key) {\n        for (var tbItem in table) {\n            if (!table.hasOwnProperty(tbItem)) {\n                continue;\n            }\n\n            if (table[tbItem][key] === value) {\n                return table[tbItem];\n            }\n        }\n    } else {\n        return table[value];\n    }\n};\n\ndataFunc.queryByID = function(tableName, ID) {\n    return dataFunc.queryOne(tableName, null, ID);\n};\n\ndataFunc.queryAll = function(tableName, key, value) {\n    var table = dataFunc.getTable(tableName);\n    if (!table || !key) {\n        return null;\n    }\n\n    var ret = {};\n    for (var tbItem in table) {\n        if (!table.hasOwnProperty(tbItem)) {\n            continue;\n        }\n\n        if (table[tbItem][key] === value) {\n            ret[tbItem] = table[tbItem];\n        }\n    }\n\n    return ret;\n};\n\ndataFunc.loadConfigs = function(progressCb, callback) {\n\n    // 加载动画\n    cc.loader.loadResDir(\"panelAnimClips\", cc.AnimationClip, function(err, clips) {\n        if (err) {\n            cc.error(err.message || err);\n            return;\n        }\n        for (var i = 0; i < clips.length; i++) {\n            dataFunc.uiPanelAnimationClips[clips[i].name] = clips[i];\n        }\n    });\n\n    // 加载数据表\n    var currentLoad = 0;\n    dataFunc.arrTables.forEach(function(tableName, index) {\n        cc.loader.loadRes(\"data/\" + tableName, function(err, content) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            if (progressCb) {\n                progressCb(index + 1, dataFunc.arrTables.length);\n            }\n            addTable(tableName, content);\n            if (callback) {\n                currentLoad++;\n                if (currentLoad >= dataFunc.arrTables.length) {\n                    callback();\n                }\n            }\n        });\n    });\n\n    function addTable(tableName, tableContent, force) {\n        if (dataFunc.csvTables[tableName] && !force) {\n            return;\n        }\n\n        var tableData = {};\n        var tableArr = [];\n        var opts = {header: true};\n        CSV.parse(tableContent, opts, function(row, keyname) {\n            tableData[row[keyname]] = row;\n            tableArr.push(row);\n        });\n\n        dataFunc.tableCast[tableName] = CSV.opts.cast;\n        dataFunc.tableComment[tableName] = CSV.opts.comment;\n        dataFunc.csvTables[tableName] = tableData;\n        dataFunc.csvTableForArr[tableName] = tableArr;\n    };\n\n    function getterCast(value, index, cast, d) {\n\n        if (cast instanceof Array) {\n            if (cast[index] === \"number\") {\n                return Number(d[index]);\n            } else if (cast[index] === \"boolean\") {\n                return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\n            } else {\n                return d[index];\n            }\n        } else {\n            if (!isNaN(Number(value))) {\n                return Number(d[index]);\n            } else if (value == \"false\" || value == \"true\" || value == \"t\" || value == \"f\") {\n                return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\n            } else {\n                return d[index];\n            }\n        }\n    }\n\n    var CSV = {\n        /* =========================================\n         * Constants ===============================\n         * ========================================= */\n\n        STANDARD_DECODE_OPTS: {\n            skip: 0,\n            limit: false,\n            header: false,\n            cast: false,\n            comment: \"\"\n        },\n\n        STANDARD_ENCODE_OPTS: {\n            delimiter: dataFunc.CELL_DELIMITERS[0],\n            newline: dataFunc.LINE_DELIMITERS[0],\n            skip: 0,\n            limit: false,\n            header: false\n        },\n\n        quoteMark: '\"',\n        doubleQuoteMark: '\"\"',\n        quoteRegex: /\"/g,\n\n\n        /* =========================================\n         * Utility Functions =======================\n         * ========================================= */\n\n\n\n        assign: function() {\n            var args = Array.prototype.slice.call(arguments);\n            var base = args[0];\n            var rest = args.slice(1);\n            for (var i = 0, len = rest.length; i < len; i++) {\n                for (var attr in rest[i]) {\n                    base[attr] = rest[i][attr];\n                }\n            }\n\n            return base;\n        },\n\n        map: function(collection, fn) {\n            var results = [];\n            for (var i = 0, len = collection.length; i < len; i++) {\n                results[i] = fn(collection[i], i);\n            }\n\n            return results;\n        },\n\n        getType: function(obj) {\n            return Object.prototype.toString.call(obj).slice(8, -1);\n        },\n\n        getLimit: function(limit, len) {\n            return limit === false ? len : limit;\n        },\n\n        buildObjectConstructor: function(fields, sample, cast) {\n            return function(d) {\n                var object = new Object();\n                var setter = function(attr, value) {\n                    return object[attr] = value;\n                };\n                if (cast) {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, cast, d));\n                    });\n                } else {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, null, d));\n                    });\n                }\n                // body.push(\"return object;\");\n                // body.join(\";\\n\");\n                return object;\n            };\n        },\n\n        buildArrayConstructor: function(sample, cast) {\n            return function(d) {\n                var row = new Array(sample.length);\n                var setter = function(idx, value) {\n                    return row[idx] = value;\n                };\n                if (cast) {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, cast, d));\n                    });\n                } else {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, null, d));\n                    });\n                }\n                return row;\n            };\n        },\n\n        frequency: function(coll, needle, limit) {\n            if (limit === void 0) limit = false;\n\n            var count = 0;\n            var lastIndex = 0;\n            var maxIndex = this.getLimit(limit, coll.length);\n\n            while (lastIndex < maxIndex) {\n                lastIndex = coll.indexOf(needle, lastIndex);\n                if (lastIndex === -1) break;\n                lastIndex += 1;\n                count++;\n            }\n\n            return count;\n        },\n\n        mostFrequent: function(coll, needles, limit) {\n            var max = 0;\n            var detected;\n\n            for (var cur = needles.length - 1; cur >= 0; cur--) {\n                if (this.frequency(coll, needles[cur], limit) > max) {\n                    detected = needles[cur];\n                }\n            }\n\n            return detected || needles[0];\n        },\n\n        unsafeParse: function(text, opts, fn) {\n            var lines = text.split(opts.newline);\n\n            if (opts.skip > 0) {\n                lines.splice(opts.skip);\n            }\n\n            var fields;\n            var constructor;\n\n            function cells(lines) {\n                var line = lines.shift();\n                if (line.indexOf('\"') >= 0) {// 含引号\n\n                    // 找到这行完整的数据, 找到对称的双引号\n                    var lastIndex = 0;\n                    var findIndex = 0;\n                    var count = 0;\n                    while (lines.length > 0) {\n                        lastIndex = line.indexOf('\"', findIndex);\n                        if (lastIndex === -1 && count % 2 === 0) break;\n\n                        if (lastIndex !== -1) {\n                            findIndex = lastIndex + 1;\n                            count++;\n                        } else {\n                            line = line + opts.newline + lines.shift();\n                        }\n                    }\n\n                    var list = [];\n                    var item;\n\n                    var quoteCount = 0;\n\n                    var start = 0;\n                    var end = 0;\n                    var length = line.length;\n                    for (var key in line) {\n                        if (!line.hasOwnProperty(key)) {\n                            continue;\n                        }\n\n                        key = parseInt(key);\n                        var value = line[key];\n\n                        if (key === 0 && value === '\"') {\n                            quoteCount++;\n                            start = 1;\n                        }\n\n                        if (value === '\"') {\n                            quoteCount++;\n\n                            if (line[key - 1] === opts.delimiter && start === key) {\n                                start++;\n                            }\n                        }\n\n                        if (value === '\"' && quoteCount % 2 === 0) {\n\n                            if (line[key + 1] === opts.delimiter || key + 1 === length) {\n                                end = key;\n                                item = line.substring(start, end);\n                                list.push(item);\n                                start = end + 2;\n                                end = start;\n                            }\n\n                        }\n\n                        if (value === opts.delimiter && quoteCount % 2 === 0) {\n                            end = key;\n                            if (end > start) {\n                                item = line.substring(start, end);\n                                list.push(item);\n                                start = end + 1;\n                                end = start;\n                            } else if (end === start) {\n                                list.push(\"\");\n                                start = end + 1;\n                                end = start;\n                            }\n                        }\n\n                    }\n\n                    end = length;\n\n                    if (end >= start) {\n                        item = line.substring(start, end);\n                        list.push(item);\n                    }\n\n                    return list;\n                } else {\n                    return line.split(opts.delimiter);\n                }\n            }\n\n            if (opts.header) {\n                if (opts.header === true) {\n                    opts.comment = cells(lines); // 第一行是注释\n                    opts.cast = cells(lines); // 第二行是数据类型\n                    fields = cells(lines);\n                } else if (this.getType(opts.header) === \"Array\") {\n                    fields = opts.header;\n                }\n\n                constructor = this.buildObjectConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\n            } else {\n                constructor = this.buildArrayConstructor(lines[0].split(opts.delimiter), opts.cast);\n            }\n\n            while (lines.length > 0) {\n                var row = cells(lines);\n                if (row.length > 1) {\n                    fn(constructor(row), fields[0]);\n                }\n            }\n\n            return true;\n        },\n\n        parse: function(text, opts, fn) {\n            var rows;\n\n            if (this.getType(opts) === \"Function\") {\n                fn = opts;\n                opts = {};\n            } else if (this.getType(fn) !== \"Function\") {\n                rows = [];\n                fn = rows.push.bind(rows);\n            } else {\n                rows = [];\n            }\n\n            opts = this.assign({}, this.STANDARD_DECODE_OPTS, opts);\n            this.opts = opts;\n\n            if (!opts.delimiter || !opts.newline) {\n                var limit = Math.min(48, Math.floor(text.length / 20), text.length);\n                opts.delimiter = opts.delimiter || this.mostFrequent(text, dataFunc.CELL_DELIMITERS, limit);\n                opts.newline = opts.newline || this.mostFrequent(text, dataFunc.LINE_DELIMITERS, limit);\n            }\n\n            // modify by jl 由表自行控制不要含有双引号.提高解析效率\n            return this.unsafeParse(text, opts, fn) &&\n                (rows.length > 0 ? rows : true);\n        }\n    };\n}"]}