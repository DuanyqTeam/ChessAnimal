{"version":3,"sources":["../../../../../../assets/common/script/basic/assets/common/script/basic/pool.js"],"names":["pool","_name1","_name2","init","console","log","getPool","name","isPool","createPrefabPool","prefab","count","cc","NodePool","size","k","put","instantiate","getPrefab","get","getPrefabEx","data","getComponent","setData","putInPool","node","putChildInPool","isValid","children","length","i","child","module","exports"],"mappings":"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","sourceRoot":"../../../../../../assets/common/script/basic","sourcesContent":["var pool = {\n    _name1: \"Pool\",\n    _name2: \"Prefab\",\n    init: function () {\n        console.log('***********调用pool***********')\n    },\n\n    getPool: function (name) {\n        return this[name + this._name1];\n    },\n\n    isPool: function (name) {\n        return this[name + this._name1] && this[name + this._name2];\n    },\n\n    //prefab, 任意类型的对象或者预制体\n    //size，初始对象池的大小，推荐使用默认大小1\n    createPrefabPool: function (prefab, count) {\n        if (!this.isPool(prefab.name)) {\n            this[prefab.name + this._name1] = new cc.NodePool();\n            this[prefab.name + this._name2] = prefab;\n        }\n\n        var pool = this[prefab.name + this._name1];\n        count = count || 1;\n        count -= pool.size();\n        for (var k = 0; k < count; k++) {\n            this[prefab.name + this._name1].put(cc.instantiate(prefab));\n        }\n    },\n\n    //从对象池中获取对象\n    getPrefab: function (name) {\n        var prefab = null;\n        if (this.isPool(name)) {\n            var pool = this[name + this._name1];\n            if (pool.size() > 0) {\n                prefab = pool.get();\n            } else {\n                prefab = cc.instantiate(this[name + this._name2]);\n            }\n        }\n        return prefab;\n    },\n\n    //从对象池中获取对象,同时初始化\n    getPrefabEx: function (name, data) {\n        var prefab = this.getPrefab(name);\n        if (prefab)\n            prefab.getComponent(name).setData(data);\n\n        return prefab;\n    },\n\n    putInPool: function (name, node) {\n        if (!this.isPool(name)) return;\n        this[name + this._name1].put(node);\n    },\n\n    //回收子节点中属于对象池的对象\n    putChildInPool: function (node) {\n        if (!cc.isValid(node) || node.children.length === 0) return;\n\n        var count = node.children.length;\n        for (var i = 0; i < count; i++) {\n            var child = node.children[0];\n            if (!this.isPool(child.name)) continue;\n            this.putChildInPool(child);\n            this.putInPool(child.name, child);\n        }\n    }\n};\nmodule.exports = pool;"]}